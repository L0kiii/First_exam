/*! Tdrag 0.0.1 */
(function($,window,document,undefined){jQuery(function(){$.fn.Tdrag=function(opt){var call={scope:null,grid:null,axis:"all",pos:false,handle:null,moveClass:"tezml",dragChange:false,changeMode:"point",cbStart:function(){},cbMove:function(){},cbEnd:function(){},random:false,randomInput:null,animation_options:{duration:800,easing:"ease-out"},disable:false,disableInput:null};var dragfn=new Dragfn(this,opt);if(opt&&$.isEmptyObject(opt)==false){dragfn.options=$.extend(call,opt)}else{dragfn.options=call}dragfn.firstRandom=true;var ele=dragfn.$element;dragfn.pack(ele,false);if(dragfn.options.randomInput!=null){$(dragfn.options.randomInput).bind("click",function(){dragfn.pack(ele,true)})}dragfn.loadJqueryfn()};var Dragfn=function(ele,opt){this.$element=ele;this.options=opt};Dragfn.prototype={init:function(obj){var self=this;self.ele=self.$element;self.handle=$(obj);self.options=self.options;self.disable=self.options.disable;self._start=false;self._move=false;self._end=false;self.disX=0;self.disY=0;self.zIndex=1000;self.moving=false;self.box=$.type(self.options.scope)==="string"?self.options.scope:null;if(self.options.handle!=null){self.handle=$(obj).find(self.options.handle)}self.handle.on("mousedown",function(ev){self.start(ev,obj);obj.setCapture&&obj.setCapture();return false});if(self.options.dragChange){$(obj).on("mousemove",function(ev){self.move(ev,obj)});$(obj).on("mouseup",function(ev){self.end(ev,obj)})}else{$(document).on("mousemove",function(ev){self.move(ev,obj)});$(document).on("mouseup",function(ev){self.end(ev,obj)})}},loadJqueryfn:function(){var self=this;$.extend({sortBox:function(obj){var arr=[];for(var s=0;s<$(obj).length;s++){arr.push($(obj).eq(s))}for(var i=0;i<arr.length;i++){for(var j=i+1;j<arr.length;j++){if(Number(arr[i].attr("index"))>Number(arr[j].attr("index"))){var temp=arr[i];arr[i]=arr[j];arr[j]=temp}}}return arr},randomfn:function(obj){self.pack($(obj),true)},disable_open:function(){self.disable=false},disable_cloose:function(){self.disable=true}})},toDisable:function(){var self=this;if(self.options.disableInput!=null){$(self.options.disableInput).bind("click",function(){if(self.disable==true){self.disable=false}else{self.disable=true}})}},start:function(ev,obj){var self=this;if(self.disable==true){return false}self._start=true;var oEvent=ev||event;self.disX=oEvent.clientX-obj.offsetLeft;self.disY=oEvent.clientY-obj.offsetTop;$(obj).css("zIndex",self.zIndex++);self.options.cbStart()},move:function(ev,obj){var self=this;if(self._start!=true){return false}self._move=true;var oEvent=ev||event;var l=oEvent.clientX-self.disX;var t=oEvent.clientY-self.disY;if(self.box!=null){var rule=self.collTestBox(obj,self.box);if(l>rule.lmax){l=rule.lmax}else{if(l<rule.lmin){l=rule.lmin}}if(t>rule.tmax){t=rule.tmax}else{if(t<rule.tmin){t=rule.tmin}}}if(self.options.axis=="all"){obj.style.left=self.grid(obj,l,t).left+"px";obj.style.top=self.grid(obj,l,t).top+"px"}else{if(self.options.axis=="y"){obj.style.top=self.grid(obj,l,t).top+"px"}else{if(self.options.axis=="x"){obj.style.left=self.grid(obj,l,t).left+"px"}}}if(self.options.pos==true){self.moveAddClass(obj)}self.options.cbMove(obj,self)},end:function(ev,obj){var self=this;if(self._start!=true){return false}if(self.options.changeMode=="sort"&&self.options.pos==true){self.sortDrag(obj)}else{if(self.options.changeMode=="point"&&self.options.pos==true){self.pointDrag(obj)}}if(self.options.pos==true){self.animation(obj,self.aPos[$(obj).attr("index")])}self.options.cbEnd();if(self.options.handle!=null){$(obj).find(self.options.handle).unbind("onmousemove");$(obj).find(self.options.handle).unbind("onmouseup")}else{$(obj).unbind("onmousemove");$(obj).unbind("onmouseup")}obj.releaseCapture&&obj.releaseCapture();self._start=false},collTestBox:function(obj,obj2){var self=this;var l1=0;var t1=0;var l2=$(obj2).innerWidth()-$(obj).outerWidth();var t2=$(obj2).innerHeight()-$(obj).outerHeight();return{lmin:l1,tmin:t1,lmax:l2,tmax:t2}},grid:function(obj,l,t){var self=this;var json={left:l,top:t};if($.isArray(self.options.grid)&&self.options.grid.length==2){var gx=self.options.grid[0];var gy=self.options.grid[1];json.left=Math.floor((l+gx/2)/gx)*gx;json.top=Math.floor((t+gy/2)/gy)*gy;return json}else{if(self.options.grid==null){return json}else{